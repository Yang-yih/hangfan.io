<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>博溢</title><link>https://Yang-yih.github.io/hangfan.io</link><description>创造梦想与价值</description><copyright>博溢</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/175016187?s=400&amp;u=520783cf156104b823b086cdbf07ae07aaa1b260&amp;v=4</url><title>avatar</title><link>https://Yang-yih.github.io/hangfan.io</link></image><lastBuildDate>Tue, 06 Aug 2024 04:01:01 +0000</lastBuildDate><managingEditor>博溢</managingEditor><ttl>60</ttl><webMaster>博溢</webMaster><item><title>整数</title><link>https://Yang-yih.github.io/hangfan.io/post/zheng-shu.html</link><description>**整数**（integers）是数学中一类重要的数，包含零、正整数和负整数。</description><guid isPermaLink="true">https://Yang-yih.github.io/hangfan.io/post/zheng-shu.html</guid><pubDate>Tue, 06 Aug 2024 04:00:38 +0000</pubDate></item><item><title>负数</title><link>https://Yang-yih.github.io/hangfan.io/post/fu-shu.html</link><description>**负数**（negative number）是数学中另一个基本的概念，表示小于零的数。</description><guid isPermaLink="true">https://Yang-yih.github.io/hangfan.io/post/fu-shu.html</guid><pubDate>Tue, 06 Aug 2024 03:54:07 +0000</pubDate></item><item><title>正数</title><link>https://Yang-yih.github.io/hangfan.io/post/zheng-shu.html</link><description>**正数**（positive number）是数学中的一个基本概念，表示大于零的数。</description><guid isPermaLink="true">https://Yang-yih.github.io/hangfan.io/post/zheng-shu.html</guid><pubDate>Tue, 06 Aug 2024 03:49:11 +0000</pubDate></item><item><title>for用法</title><link>https://Yang-yih.github.io/hangfan.io/post/for-yong-fa.html</link><description>`for` 循环是 Python 中最常用的循环之一，用于遍历序列（如列表、元组、字符串等）或其他可迭代对象。</description><guid isPermaLink="true">https://Yang-yih.github.io/hangfan.io/post/for-yong-fa.html</guid><pubDate>Mon, 22 Jul 2024 12:55:17 +0000</pubDate></item><item><title> itertools用法</title><link>https://Yang-yih.github.io/hangfan.io/post/%20itertools-yong-fa.html</link><description>`itertools` 是 Python 的一个标准库，提供了许多有用的迭代器函数，用于高效地操作和生成迭代器。</description><guid isPermaLink="true">https://Yang-yih.github.io/hangfan.io/post/%20itertools-yong-fa.html</guid><pubDate>Mon, 22 Jul 2024 12:54:32 +0000</pubDate></item><item><title>泛洪算法</title><link>https://Yang-yih.github.io/hangfan.io/post/fan-hong-suan-fa.html</link><description>泛洪算法（Flood Fill Algorithm）是一种用于图像处理、图形渲染和其他领域的算法，主要用于填充一个区域或识别区域。</description><guid isPermaLink="true">https://Yang-yih.github.io/hangfan.io/post/fan-hong-suan-fa.html</guid><pubDate>Mon, 22 Jul 2024 12:53:07 +0000</pubDate></item><item><title>二维列表</title><link>https://Yang-yih.github.io/hangfan.io/post/er-wei-lie-biao.html</link><description>二维列表（二维数组）是一种在 Python 中常用的数据结构，用于表示表格、矩阵等形式的数据。</description><guid isPermaLink="true">https://Yang-yih.github.io/hangfan.io/post/er-wei-lie-biao.html</guid><pubDate>Mon, 22 Jul 2024 12:52:10 +0000</pubDate></item><item><title>reverse用法</title><link>https://Yang-yih.github.io/hangfan.io/post/reverse-yong-fa.html</link><description>`reverse` 是 Python 中用于反转序列的方法或函数。</description><guid isPermaLink="true">https://Yang-yih.github.io/hangfan.io/post/reverse-yong-fa.html</guid><pubDate>Mon, 22 Jul 2024 11:41:10 +0000</pubDate></item><item><title>join用法</title><link>https://Yang-yih.github.io/hangfan.io/post/join-yong-fa.html</link><description>`join()` 函数是 Python 字符串的一种方法，用于将可迭代对象（如列表、元组等）的元素连接成一个字符串，并在每个元素之间插入指定的分隔符。</description><guid isPermaLink="true">https://Yang-yih.github.io/hangfan.io/post/join-yong-fa.html</guid><pubDate>Mon, 22 Jul 2024 11:33:24 +0000</pubDate></item><item><title>PY知识点-2 .</title><link>https://Yang-yih.github.io/hangfan.io/post/PY-zhi-shi-dian--2%20..html</link><description>### 字符串定义与转义字符&#13;
&#13;
在 Python 中，字符串可以用单引号 `'` 或双引号 `'` 定义，例如：&#13;
&#13;
```python&#13;
str1 = 'Hello'&#13;
str2 = 'World'&#13;
```&#13;
&#13;
转义字符用于在字符串中表示一些特殊字符，如换行符、制表符等。</description><guid isPermaLink="true">https://Yang-yih.github.io/hangfan.io/post/PY-zhi-shi-dian--2%20..html</guid><pubDate>Wed, 17 Jul 2024 03:17:57 +0000</pubDate></item><item><title>PY知识点-1</title><link>https://Yang-yih.github.io/hangfan.io/post/PY-zhi-shi-dian--1.html</link><description>### 列表的创建、访问、修改、删除、遍历&#13;
&#13;
#### 创建列表&#13;
&#13;
可以使用方括号 `[]` 创建列表，列表可以包含不同类型的元素：&#13;
&#13;
```python&#13;
lst = [1, 2, 3, 'apple', 'banana']&#13;
```&#13;
&#13;
#### 访问列表元素&#13;
&#13;
通过索引访问列表中的元素，索引从 0 开始：&#13;
&#13;
```python&#13;
print(lst[0])  # 输出：1&#13;
print(lst[3])  # 输出：apple&#13;
```&#13;
&#13;
#### 修改列表元素&#13;
&#13;
可以直接通过索引修改列表中的元素：&#13;
&#13;
```python&#13;
lst[1] = 'orange'&#13;
print(lst)  # 输出：[1, 'orange', 3, 'apple', 'banana']&#13;
```&#13;
&#13;
#### 删除列表元素&#13;
&#13;
可以使用 `del` 语句或 `remove()` 方法删除列表中的元素：&#13;
&#13;
```python&#13;
del lst[2]&#13;
print(lst)  # 输出：[1, 'orange', 'apple', 'banana']&#13;
&#13;
lst.remove('orange')&#13;
print(lst)  # 输出：[1, 'apple', 'banana']&#13;
```&#13;
&#13;
#### 遍历列表&#13;
&#13;
可以使用 `for` 循环遍历列表：&#13;
&#13;
```python&#13;
for item in lst:&#13;
    print(item)&#13;
```&#13;
&#13;
### 二维列表的创建、访问、修改、遍历&#13;
&#13;
#### 创建二维列表&#13;
&#13;
二维列表是列表的列表：&#13;
&#13;
```python&#13;
matrix = [&#13;
    [1, 2, 3],&#13;
    [4, 5, 6],&#13;
    [7, 8, 9]&#13;
]&#13;
```&#13;
&#13;
#### 访问二维列表元素&#13;
&#13;
可以使用两个索引访问二维列表中的元素：&#13;
&#13;
```python&#13;
print(matrix[0][1])  # 输出：2&#13;
```&#13;
&#13;
#### 修改二维列表元素&#13;
&#13;
可以直接通过索引修改二维列表中的元素：&#13;
&#13;
```python&#13;
matrix[1][1] = 50&#13;
print(matrix)  # 输出：[[1, 2, 3], [4, 50, 6], [7, 8, 9]]&#13;
```&#13;
&#13;
#### 遍历二维列表&#13;
&#13;
可以使用嵌套的 `for` 循环遍历二维列表：&#13;
&#13;
```python&#13;
for row in matrix:&#13;
    for item in row:&#13;
        print(item, end=' ')&#13;
    print()&#13;
```&#13;
&#13;
### 循环嵌套分支&#13;
&#13;
在循环中嵌套分支语句用于实现更复杂的逻辑：&#13;
&#13;
```python&#13;
for i in range(5):&#13;
    if i % 2 == 0:&#13;
        print(f'{i} is even')&#13;
    else:&#13;
        print(f'{i} is odd')&#13;
```&#13;
&#13;
### 双层嵌套循环&#13;
&#13;
双层嵌套循环用于遍历二维列表或实现其他双重循环逻辑：&#13;
&#13;
```python&#13;
for i in range(3):&#13;
    for j in range(3):&#13;
        print(f'i = {i}, j = {j}')&#13;
```&#13;
&#13;
这可以用于遍历二维列表：&#13;
&#13;
```python&#13;
for i in range(len(matrix)):&#13;
    for j in range(len(matrix[i])):&#13;
        print(matrix[i][j], end=' ')&#13;
    print()&#13;
```&#13;
&#13;
以上是 Python 中列表和二维列表的创建、访问、修改、删除、遍历，以及循环嵌套分支和双层嵌套循环的基本用法。</description><guid isPermaLink="true">https://Yang-yih.github.io/hangfan.io/post/PY-zhi-shi-dian--1.html</guid><pubDate>Wed, 17 Jul 2024 03:12:06 +0000</pubDate></item><item><title>航帆启动器0.4.2U更新内容</title><link>https://Yang-yih.github.io/hangfan.io/post/hang-fan-qi-dong-qi-0.4.2U-geng-xin-nei-rong.html</link><description># 一，新功能&#13;
## 1.快速更新功能&#13;
## _2.白天使用高亮界面，晚上使用暗黑界面，更好看_&#13;
# 二，BUG修补&#13;
## _1.关机功能调整了_&#13;
# 三，美中不足&#13;
## _2.实时时间暂未修复_&#13;
# 四，界面展示&#13;
![屏幕截图 2024-07-08 212706](https://github.com/Yang-yih/hangfan.io/assets/175016187/09cf7823-1845-4fb0-a6a2-6432706447d4)&#13;
[如您喜欢我们的产品，请收藏官方网址](https://yang-yih.github.io/hangfan.io/)&#13;
&#13;
。</description><guid isPermaLink="true">https://Yang-yih.github.io/hangfan.io/post/hang-fan-qi-dong-qi-0.4.2U-geng-xin-nei-rong.html</guid><pubDate>Mon, 08 Jul 2024 13:30:05 +0000</pubDate></item><item><title>测试</title><link>https://Yang-yih.github.io/hangfan.io/post/ce-shi.html</link><description>2024/7/8 China Hainan Haikou&#13;
Test 13 th gen I5&#13;
![11th-gen-core-i5-processors-badge-rwd png rendition intel web 64 64](https://github.com/Yang-yih/hangfan.io/assets/175016187/d7e284d2-c4a4-455e-bd5d-7cb133eb1dcf)&#13;
。</description><guid isPermaLink="true">https://Yang-yih.github.io/hangfan.io/post/ce-shi.html</guid><pubDate>Mon, 08 Jul 2024 12:50:41 +0000</pubDate></item></channel></rss>